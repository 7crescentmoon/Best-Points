<% layout('layouts/layout') %>

<div class="container">
  <div class="text-center">
    <h1>For Your Places</h1>
    <p class="text-secondary">( F Y P )</p>
  </div>
  <div
    id="mapContainer"
    style="width: 100%; height: 500px; margin-bottom: 5%"\
    class="border"
  ></div>

  <% for (place of places) { %>
  <div class="card mt-3 mb-3 bg-body-tertiary">
    <div class="row">
      <div class="col-md-4">
        <% if(place.images.length) {%>
        <img
          src="/images/<%= place.images[0].filename %>"
          alt=""
          class="img-fluid rounded"
        />
        <% } else { %>
        <img src="/images/images.jpeg" class="img-fluid rounded" />
        <% } %>
      </div>
      <div class="col-md-8">
        <div class="card-body">
          <h5 class="card-title"><%= place.title %></h5>
          <p class="card-text"><%= place.description %></p>
          <small class="card-text text-secondary"><%= place.location %></small>
          <p class="card-text text-secondary">
            Author : <%= place.author.username %>
          </p>
          <div class="mt-3">
            <a href="/places/<%= place._id %>" class="btn btn-primary btn-sm"
              >View Place</a
            >
          </div>
        </div>
      </div>
    </div>
  </div>
  <% } %>
</div>
<script>
  const clusterData = JSON.parse('<%- clusteredPlace %>');

  const dataPoints = clusterData.map(
    (place) => new H.clustering.DataPoint(place.latitude, place.longitude)
  );

  // Initialize the platform object
  const platform = new H.service.Platform({
    apikey: "xgnMhTN3RQBGKBzG3YMDYVK67RidvFgyNskoVvGQMvk",
  });

  // Obtain the default map types from the platform object
  const defaultLayers = platform.createDefaultLayers();

  // Instantiate (and display) the map
  const map = new H.Map(
    document.getElementById("mapContainer"),
    defaultLayers.vector.normal.map,
    {
      zoom: 3,
      center: {
        lat: -6.2,
        lng: 106.816666,
      },
    }
  );

  // Buat Clustering Provider dari DataPoint
    const clusteredDataProvider = new H.clustering.Provider(dataPoints)
  // Create a layer that includes the data provider and its data points:
  const layer = new H.map.layer.ObjectLayer(clusteredDataProvider);

  // Add the layer to the map:
  map.addLayer(layer);

  const ui = H.ui.UI.createDefault(map, defaultLayers, "en-US");
  const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));
</script>
